{"version":3,"sources":["assets/Scripts/result.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PrefabForResult from \"./PrefabForResult\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Label)\n    player: cc.Label = null;\n\n    @property(cc.Label)\n    totalScore: cc.Label = null;\n    score: number = null;\n\n    @property(cc.Label)\n    result: cc.Label = null;\n\n    @property(cc.Button)\n    replayBtn: cc.Button = null;\n\n    @property(cc.Prefab)\n    resultPrefab: cc.Prefab = null;\n    \n\n    @property(cc.Node)\n    summaryTableNode: cc.Node = null;\n    spriteNodeG: cc.SpriteFrame = null;\n    spriteNodeR: cc.SpriteFrame = null;\n    res: string = null;\n    resultFinal: any[] = [];\n    // handleResultData: cc.Node = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.player.string = \"Player: \" + cc.sys.localStorage.getItem('player');\n        this.score = cc.sys.localStorage.getItem('playerScore');\n\n        //get result array from mainGame\n        let strngArr = cc.sys.localStorage.getItem('results');\n        this.resultFinal = JSON.parse(strngArr);\n\n        console.log(this.resultFinal, 'final resultlllll');\n\n        this.totalScore.string = \"Score: \" + this.score.toString();\n        if(this.score >= 200){\n            this.result.string = \"Expert\";\n        } else {\n            this.result.string = \"Failed\";\n        }\n\n        this.setResult(this.resultFinal);\n        \n    }\n\n    setResult(results: { result: string, player: string, score: number }[]) {\n        // Clear existing items in the summary table\n        console.log(results, 'table');\n        \n        //to show last 5 index\n        const totalResults = results.length;\n        const startIndex = totalResults >= 5 ? totalResults - 5 : 0;\n\n        // Set spacing between items (adjust as needed)\n        const spacingX = 100;\n        const spacingY = 100;\n        results.slice(startIndex).forEach((result, index) => {\n            // Instantiate the prefab\n            let resultItem = cc.instantiate(this.resultPrefab);\n            resultItem.x = 0;\n            console.log(resultItem.x, 'x position');\n            // Call the updateResult method to set the result details\n\n            this.showTable(resultItem, result);\n            // this.getComponent('result').showTable(resultItem, result);\n            \n            const row = Math.floor(index / 5);  \n            const col = index % 5; \n\n            // Set the position of the resultItem\n            resultItem.setPosition(col * (resultItem.width + spacingX), -row * (resultItem.height + spacingY));\n            console.log(resultItem.getPosition());\n            console.log(resultItem.x, 'x position');\n\n    \n            // Add the instantiated item to the summary table\n            console.log(resultItem, 'resultitem');\n            console.log(result, 'result =====');\n        });\n        \n    }\n\n    \n\n    showTable(resultItem: cc.Node, result: { result: string, player: string, score: number }){\n        // result: { result: string, player: string, score: number }\n        //get value from main game\n        console.log( 'result in final22', resultItem);\n        \n        let spriteResult = resultItem.getChildByName('Result').getComponent(cc.Sprite);\n        let spritePlayer = resultItem.getChildByName('player').getComponent(cc.Sprite);\n        let labelScore = resultItem.getChildByName('Score').getComponent(cc.Label);\n\n        console.log(spriteResult, 'get child label result1-------');\n        console.log(spritePlayer, 'get child label player1-------');\n\n        let sprite = resultItem.getComponent(PrefabForResult);\n        console.log(sprite, 'sprite of Prefab');\n        // console.log(sprite.SpriteRes.greySprite, 'result frame!!!!!!!');\n        spriteResult.spriteFrame = sprite.greySprite;\n        console.log('111111', spriteResult);\n        // sprite.SpriteRes.spriteFrame = sprite.SpriteRes.greySprite;\n        console.log('222222');\n            \n        // check res sprite\n        if (result.result == \"Gold\") {\n            spriteResult.spriteFrame = sprite.goldSprite;\n        } else if (result.result == \"Grey\"){\n            spriteResult.spriteFrame = sprite.greySprite;\n        }\n\n        // check player sprite\n        if (result.player == \"Gold\") {\n            spritePlayer.spriteFrame = sprite.goldSprite;\n        } else if (result.player == \"Grey\"){\n            spritePlayer.spriteFrame = sprite.greySprite;\n        }\n\n        \n        labelScore.string = result.score.toString();\n\n        // Add the instantiated item to the summary table\n        // this.summaryTableNode.addChild(resultItem);\n        this.summaryTableNode.removeChild(resultItem);\n        this.summaryTableNode.addChild(resultItem);\n}\n    \n\n    replayButton() {\n        cc.director.loadScene('game');\n    }\n\n\n}\n"]}